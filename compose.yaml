services:
  web:
    build:
      context: ./docker/nextjs
      target: production
    environment:
      - NODE_ENV=production
      - PORT=${PORT:-3000}
      - HOSTNAME=${HOST_NAME:-0.0.0.0}
    tty: true
    volumes:
      - shared_nginx:/static

  api:
    build:
      context: ./docker/go
      target: production
    depends_on:
      mysql:
        condition: service_started
        required: false
    environment:
      - PORT=${API_PORT:-3100}
      - SIGNING_KEY=${SIGNING_KEY:-AllYourBase}
      - DB_DRIVER=mysql
      - DB_HOST=mysql
      - DB_PORT=3306
      - DB_USER=${MYSQL_USER:-user}
      - DB_PASSWORD=${MYSQL_PASSWORD:-password}
      - DB_NAME=${MYSQL_DATABASE:-sample_todo_app}
    tty: true
    ports:
      - ${API_PORT}:${API_PORT}

  nginx:
    build:
      context: ./docker/nginx
    depends_on:
      web:
        condition: service_started
        required: false
    environment:
      - PROXY_HOST=web
      - SERVER_PORT=${PORT:-3000}
      - NGINX_PORT=${NGINX_PORT:-80}
      - NGINX_SSL_PORT=${NGINX_SSL_PORT:-443}
    ports:
      - ${NGINX_PORT:-80}:${NGINX_PORT:-80}
      - ${NGINX_SSL_PORT:-443}:${NGINX_SSL_PORT:-443}
    volumes:
      - shared_nginx:/usr/share/nginx/html/static

  mysql:
    image: mysql:8.0
    environment:
      - MYSQL_ROOT_PASSWORD=${MYSQL_ROOT_PASSWORD:-root}
      - MYSQL_DATABASE=${MYSQL_DATABASE:-todo_app}
      - MYSQL_USER=${MYSQL_USER:-user}
      - MYSQL_PASSWORD=${MYSQL_PASSWORD:-password}
    volumes:
      - db:/var/lib/mysql

volumes:
  shared_nginx: {}
  db: {}